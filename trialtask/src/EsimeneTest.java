// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class EsimeneTest {
	
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  Reporter rp;
  
  @Before
  public void setUp() {
	System.setProperty("webdriver.chrome.driver", "C:\\chromedriver.exe");
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
    rp = new Reporter();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void esimene() {
    // Test name: esimene
    // Step # | name | target | value
	rp.addSimple("<h1>esimene test</h1>");
	  
	try {
    
	// 1 | open | /index.php | 
	rp.add("// 1 | open | /index.php | ");  
    driver.get("http://automationpractice.com/index.php");
    System.out.println("// 1 | open | /index.php | ");
    
    // 2 | setWindowSize | 1472x1040 | 
    rp.add("// 2 | setWindowSize | 1400x1000 | ");
    driver.manage().window().setSize(new Dimension(1400, 1000));
    System.out.println("// 2 | setWindowSize | 1400x1000 | ");
    
    // 3 | click | linkText=Sign in | 
    rp.add("// 3 | click | Sign in | ");
    driver.findElement(By.linkText("Sign in")).click();
    System.out.println("// 3 | click | Sign in | ");
    
    // 4 | type | id=email | lawrence@hot.ee
    rp.add("// 4 | type | email = lawrence@hot.ee");
    driver.findElement(By.id("email")).sendKeys("lawrence@hot.ee");
    System.out.println("// 4 | type | email = lawrence@hot.ee");
    
    // 5 | type | id=passwd | minuesimeneselenium
    rp.add("// 5 | type | passwd = minuesimeneselenium");
    driver.findElement(By.id("passwd")).sendKeys("minuesimeneselenium");
    System.out.println("// 5 | type | passwd = minuesimeneselenium");
    
    // 6 | click | css=#SubmitLogin > span | 
    rp.add("// 6 | click | Login | ");
    driver.findElement(By.cssSelector("#SubmitLogin > span")).click();
    System.out.println("// 6 | click | Login | ");

    // 7 | click | css=.standard-checkout > span | 
    rp.add("// 7 | find | My account | ");
    driver.findElement(By.xpath("//span[text()='My account']"));
    System.out.println("// 7 | find | My account | ");
    
    // 8 | click | css=.standard-checkout > span | 
    rp.add("// 8 | find | john doe | ");
    driver.findElement(By.xpath("//span[text()='john doe']"));
    System.out.println("// 8 | find | john doe | ");
    
    rp.add("<b><font style=\"color:green;\">!!! TEST PASSED !!!</font></b>");
    
  }
	  catch(Exception e){
		  e.printStackTrace();
		  rp.add("<p style=\"color:red;\">" + e.getMessage() + "</p>");
	  }
   
    
  }
}
